@using PZStore.Models.Account
@model RegisterModel

<div class="modal fade" id="signUpModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Registration</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            @using (Ajax.BeginForm("Register", new AjaxOptions { UpdateTargetId = "reg_form" }))
            {
                @Html.AntiForgeryToken()
                <!-- Modal body -->
                <div class="modal-body">
                    <form action="#" method="post" id="reg_form">
                        <div class="form-group">
                            <label for="Email">Email address:</label>
                            @Html.TextBoxFor(model => model.Email, new
                            {
                                @type = "email",
                                @class = "form-control",
                                @placeholder = "Your email",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.Email, String.Empty, new { @style = "color:red" })
                            @Html.ValidationMessage("existEmail", new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label for="Password">Password:</label>
                            @Html.TextBoxFor(model => model.Password, new
                            {
                                @type = "password",
                                @class = "form-control",
                                @placeholder = "Password",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.Password, String.Empty, new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label for="ConfirmPassword">Confirm Password:</label>
                            @Html.TextBoxFor(model => model.ConfirmPassword, new
                            {
                                @type = "password",
                                @class = "form-control",
                                @placeholder = "Confirm Password",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, String.Empty, new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label for="FirstName">First Name:</label>
                            @Html.TextBoxFor(model => model.FirstName, new
                            {
                                @class = "form-control",
                                @placeholder = "First Name",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.FirstName, String.Empty, new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label for="LastName">Last Name:</label>
                            @Html.TextBoxFor(model => model.LastName, new
                            {
                                @class = "form-control",
                                @placeholder = "Last Name",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.LastName, String.Empty, new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label>Country:</label>
                            @Html.DropDownListFor(model => model.Country, new SelectList(Enum.GetValues(typeof(Countries))), "Choose Country",
                                                                                                    new { @class = "browser-default custom-select" })
                            @Html.ValidationMessageFor(model => model.Country, String.Empty, new { @style = "color:red" })
                        </div>
                        <div class="form-group">
                            <label for="Phone">Phone:</label>
                            @Html.TextBoxFor(model => model.Phone, new
                            {
                                @type = "tel",
                                @class = "form-control",
                                @placeholder = "Your Phone",
                                @required = "required"
                            })
                            @Html.ValidationMessageFor(model => model.Phone, String.Empty, new { @style = "color:red" })
                        </div>

                        <input type="submit" class="btn btn-warning btn-block btn-lg" value="SIGN UP">
                    </form>
                </div>
            }
        </div>
    </div>
</div>